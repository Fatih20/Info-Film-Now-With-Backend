{"version":3,"sources":["component/header/header.js","config.js","component/content/movie.js","component/content/summary.js","GlobalComponent.js","component/content/content.js","App.js","reportWebVitals.js","index.js"],"names":["Main","styled","div","Logo","img","Title","h1","Header","src","API_KEY","IMAGE_URL","MovieTitle","h2","MoviePoster","MovieYear","p","Movie","movie","poster_path","title","release_date","changeToSummary","onClick","slice","DescriptionContainer","MovieDate","MovieOverview","Summary","overview","VanillaButton","button","MainIsList","css","MainIsSummary","isList","ExplanationContainer","BackButton","Content","useState","movieData","setMovieData","setIsList","examinedMovie","useRef","userPositionInList","positionX","positionY","a","fetch","response","json","data","results","useEffect","getMovieList","then","console","log","window","scrollTo","current","map","scrollX","scrollY","prevIsList","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55faa51d.chunk.js","sourcesContent":["import React from 'react';\nimport styled from \"styled-components\";\n\nconst Main = styled.div`\n    background-color: black;\n    color: #fafafa;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 20px;\n\n    & > * {\n        display: inline-block;\n        text-align: center;\n    }\n`;\n\nconst Logo = styled.img`\n    margin-top: 10px;\n    max-width: 150px;\n`;\n\nconst Title = styled.h1`\n`;\n\nfunction Header (){\n    return (\n        <Main>\n            <Title>Cinema's Most Popular</Title>\n            <Logo  src=\"blue_long_1-8ba2ac31f354005783fab473602c34c3f4fd207150182061e425d366e4f34596.svg\"/>\n        </Main>\n    )\n}\n\nexport default Header;","export const API_KEY = \"d87229b426af9640b5a4df6cd94336d3\";\nexport const IMAGE_URL = \"https://image.tmdb.org/t/p/w300\";","import React, { useEffect, useState } from 'react';\nimport styled, { css } from \"styled-components\";\n\nimport { API_KEY, IMAGE_URL } from \"../../config\";\n\nconst Main = styled.div`\n    cursor: pointer;\n    color: #fafafa;\n    max-width: 300px;\n    padding: 20px 0px;\n    text-align: center;\n`;\n\nconst MovieTitle = styled.h2`\n    font-weight: 700;\n    font-size: 30px;\n    margin-top: 15px;\n    margin-bottom: 5px;\n`;\n\nconst MoviePoster = styled.img`\n`;\n\nconst MovieYear = styled.p`\n`;\n\nfunction Movie ({movie : { poster_path, title, release_date }, changeToSummary}){\n    return (\n        <Main onClick={changeToSummary}>\n            <MoviePoster src={`${IMAGE_URL}${poster_path}`} />\n            <MovieTitle>{title}</MovieTitle>\n            <MovieYear>{release_date.slice(0, 4)}</MovieYear>\n        </Main>\n    )\n}\n\nexport default Movie;\n","import React, { useEffect, useState } from 'react';\nimport styled, { css } from \"styled-components\";\n\nimport { API_KEY, IMAGE_URL } from \"../../config\";\n\nconst Main = styled.div`\n    display: flex;\n`;\n\nconst DescriptionContainer = styled.div`\n    color: #fafafa;\n    display: flex;\n    flex-direction: column;\n    padding-left: 20px;\n`;\n\nconst MovieTitle = styled.h2`\n    font-size: 60px;\n`;\n\nconst MovieDate = styled.p`\n    font-size: 18px;\n`;\n\nconst MovieOverview = styled.p`\n    font-size: 19px;\n    line-height: 1.4;\n    margin: 15px 0px;\n`;\n\nconst MoviePoster = styled.img`\n`;\n\nfunction Summary ({movie: { poster_path, title, release_date, overview }}){\n    return (\n        <Main>\n            <MoviePoster src={`${IMAGE_URL}${poster_path}`}/>\n            <DescriptionContainer>\n                <MovieTitle>{title}</MovieTitle>\n                <MovieDate>{release_date}</MovieDate>\n                <MovieOverview>{overview}</MovieOverview>\n            </DescriptionContainer>\n        </Main>\n    )\n};\n\nexport default Summary;","import styled from \"styled-components\";\n\nexport const VanillaButton = styled.button`\n    display: inline-block;\n    border: none;\n    padding: 1rem 2rem;\n    margin: 0;\n    text-decoration: none;\n    cursor: pointer;\n    text-align: center;\n    transition: background 250ms ease-in-out, transform 150ms ease;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n`;","import React, { useEffect, useState, useRef } from 'react';\nimport styled, { css } from \"styled-components\";\n\nimport { API_KEY, IMAGE_URL } from \"../../config\";\n\nimport Movie from './movie';\nimport Summary from './summary';\n\nimport { VanillaButton } from '../../GlobalComponent';\n\nconst MainIsList = css`\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: 30px;\n    justify-content: space-around;\n`;\n\nconst MainIsSummary = css`\n    flex-direction: column;\n`;\n\nconst Main = styled.div`\n    background-color: #1a1a1a;\n    display: flex;\n    padding: 20px;\n    ${({isList})=>{\n        if (isList){\n            return MainIsList;\n        } else {\n            return MainIsSummary;\n        }\n    }}\n`;\n\nconst ExplanationContainer = styled.div`\n    border-bottom: #fafafa 1px solid;\n    display: flex;\n    flex-direction: column;\n    margin: 0 auto;\n    max-width: 1280px;\n    padding: 30px;\n`;\n\nconst BackButton = styled(VanillaButton)`\n    border-radius: 5px;\n    display: block;\n    font-size: 15px;\n    margin: 20px auto 0 auto;\n    padding: 10px 15px;\n    transition: all 0.2s;\n\n    &:hover {\n        background-color: #4e4e4e;\n        color: #fafafa;\n    }\n`;\n\nfunction Content (){\n    const[movieData, setMovieData] = useState([]);\n    const[isList, setIsList] = useState(true);\n    const examinedMovie = useRef({});\n    const userPositionInList = useRef({positionX: 0, positionY:0});\n    \n    async function getMovieList(){\n        const response = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&page=1`);\n        const data = await response.json();\n        const movieData = data.results;\n        return movieData;\n    }\n\n    useEffect(()=>{\n        getMovieList().then(movieData => {\n            console.log(movieData);\n            setMovieData(movieData)});\n    }, []);\n\n    useEffect(() => {\n        if (isList){\n            window.scrollTo(userPositionInList.current.positionX, userPositionInList.current.positionY);\n        }\n    }, [isList])\n\n    function changeToSummary(movie){\n        userPositionInList.current = {positionX : window.scrollX, positionY : window.scrollY}\n        examinedMovie.current = movie;\n        setIsList(prevIsList => !prevIsList);\n    }\n\n    function changeToList(){\n        setIsList(prevIsList => !prevIsList);\n    }\n\n    function movieMaker (movie){\n        return (\n            <Movie key={movie.poster_path} movie={movie} changeToSummary={() => changeToSummary(movie)}/>\n        )\n     }\n    \n    if (isList){\n        return(\n            <Main isList={isList}>\n                {movieData.map(movieMaker)}\n            </Main>\n        )\n    } else {\n        return (\n            <Main isList={isList}>\n                <ExplanationContainer>\n                    <Summary movie={examinedMovie.current} />\n                    <BackButton onClick={changeToList}>Return to the movie list</BackButton>\n                </ExplanationContainer>\n            </Main>\n        )\n    }\n};\n\nexport default Content;","import Header from './component/header/header';\nimport Content from './component/content/content';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Content />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}